<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List with Mark as Complete</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 50px;
            background-color: #f8f9fa;
        }
        h1 {
            color: #343a40;
        }
        input {
            padding: 10px;
            width: 200px;
            margin-right: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        button {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }
        ul {
            list-style-type: none;
            padding: 0;
            margin-top: 20px;
        }
        li {
            padding: 10px;
            margin: 5px 0;
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }
        li.completed {
            background-color: #d4edda; /* Green background for completed tasks */
            color: #155724;
            text-decoration: line-through;
        }
        .delete {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }
        .delete:hover {
            background-color: #c82333;
        }
    </style>
</head>
<body>
    <h1>To-Do List with Mark as Complete</h1>
    <input type="text" id="task" placeholder="Enter your task">
    <button onclick="addTask()">Add Task</button>
    <ul id="todoList"></ul>

    <script>
        document.addEventListener("DOMContentLoaded", loadTasks);

        function addTask() {
            const taskInput = document.getElementById("task");
            const taskValue = taskInput.value.trim();
            if (taskValue === "") return;

            // Add task to the UI
            createTaskElement(taskValue, false);

            // Save task to localStorage
            saveTaskToLocalStorage(taskValue, false);

            // Clear the input field
            taskInput.value = "";
        }

        function createTaskElement(taskValue, isCompleted) {
            const list = document.getElementById("todoList");
            const listItem = document.createElement("li");
            listItem.textContent = taskValue;

            // Mark as complete
            if (isCompleted) {
                listItem.classList.add("completed");
            }

            // Toggle complete state on click
            listItem.addEventListener("click", () => {
                listItem.classList.toggle("completed");
                const taskCompleted = listItem.classList.contains("completed");
                updateTaskInLocalStorage(taskValue, taskCompleted);
            });

            // Delete button
            const deleteButton = document.createElement("button");
            deleteButton.textContent = "Delete";
            deleteButton.className = "delete";
            deleteButton.onclick = (e) => {
                e.stopPropagation(); // Prevent triggering mark as complete
                deleteTask(listItem, taskValue);
            };
            listItem.appendChild(deleteButton);

            list.appendChild(listItem);
        }

        function deleteTask(listItem, taskValue) {
            listItem.remove();
            removeTaskFromLocalStorage(taskValue);
        }

        function saveTaskToLocalStorage(taskValue, isCompleted) {
            let tasks = JSON.parse(localStorage.getItem("tasks")) || [];
            tasks.push({ task: taskValue, completed: isCompleted });
            localStorage.setItem("tasks", JSON.stringify(tasks));
        }

        function updateTaskInLocalStorage(taskValue, isCompleted) {
            let tasks = JSON.parse(localStorage.getItem("tasks")) || [];
            tasks = tasks.map(task => 
                task.task === taskValue ? { ...task, completed: isCompleted } : task
            );
            localStorage.setItem("tasks", JSON.stringify(tasks));
        }

        function removeTaskFromLocalStorage(taskValue) {
            let tasks = JSON.parse(localStorage.getItem("tasks")) || [];
            tasks = tasks.filter(task => task.task !== taskValue);
            localStorage.setItem("tasks", JSON.stringify(tasks));
        }

        function loadTasks() {
            const tasks = JSON.parse(localStorage.getItem("tasks")) || [];
            tasks.forEach(({ task, completed }) => createTaskElement(task, completed));
        }
    </script>
</body>
</html>